C51 COMPILER V9.52.0.0   MENU                                                              10/23/2020 17:08:44 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE MENU
OBJECT MODULE PLACED IN .\Objects\menu.obj
COMPILER INVOKED BY: H:\electric\Keil_v5\C51\BIN\C51.EXE menu.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\List
                    -ings\menu.lst) TABS(2) OBJECT(.\Objects\menu.obj)

line level    source

   1          /**
   2           * @file: menu.c
   3           * @author: Honokawings (1915569481@qq.com)
   4           * @description: 菜单结构建立
   5           * @version 0.1
   6           * @date: 2020-10-22 16:10:99
   7           * 
   8           * @copyright Copyright (c) 2020
   9           * 
  10           */
  11          #include "menu.h"
  12          
  13          static u8 code str_menu[][32]=
  14          {
  15          {0x00,0x02,0x02,0xC2,0x02,0x02,0x02,0xFE,0x82,0x82,0x82,0x82,0x82,0x02,0x00,0x00,0x40,0x40,0x40,0x7F,0x40,
             -0x40,0x40,0x7F,
  16           0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x00},/*"正",0*/
  17          {0x02,0xE2,0x22,0x22,0x3E,0x00,0x08,0x88,0x48,0x39,0x0E,0x08,0xC8,0x08,0x08,0x00,0x00,0x43,0x82,0x42,0x3E,
             -0x00,0x21,0x71,
  18           0x29,0x25,0x23,0x21,0x28,0x70,0x00,0x00},/*"弦",1*/
  19          {0x10,0x60,0x02,0x0C,0xC0,0x00,0xF8,0x88,0x88,0x88,0xFF,0x88,0x88,0xA8,0x18,0x00,0x04,0x04,0x7C,0x03,0x80,
             -0x60,0x1F,0x80,
  20           0x43,0x2C,0x10,0x28,0x46,0x81,0x80,0x00},/*"波",2*/
  21          {0x80,0x82,0x82,0xFE,0x82,0x82,0xFE,0x82,0x82,0x80,0x20,0x10,0x08,0x86,0x60,0x00,0x80,0x40,0x30,0x0F,0x00,
             -0x00,0xFF,0x00,
  22           0x00,0x80,0x84,0x42,0x21,0x10,0x0C,0x00},/*"形",3*/
  23          
  24          
  25          {0x00,0x04,0x84,0x84,0x84,0x84,0x84,0x84,0x84,0x84,0x84,0x84,0x84,0x04,0x00,0x00,0x20,0x20,0x20,0x20,0x20,
             -0x20,0x20,0x20,
  26          0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x00},/*"三",0*/
  27          {0x20,0x10,0xE8,0x24,0x27,0x24,0x24,0xE4,0x24,0x34,0x2C,0x20,0xE0,0x00,0x00,0x00,0x80,0x60,0x1F,0x09,0x09,
             -0x09,0x09,0x7F,
  28          0x09,0x09,0x49,0x89,0x7F,0x00,0x00,0x00},/*"角",1*/
  29          {0x10,0x60,0x02,0x0C,0xC0,0x00,0xF8,0x88,0x88,0x88,0xFF,0x88,0x88,0xA8,0x18,0x00,0x04,0x04,0x7C,0x03,0x80,
             -0x60,0x1F,0x80,
  30          0x43,0x2C,0x10,0x28,0x46,0x81,0x80,0x00},/*"波",2*/
  31          {0x80,0x82,0x82,0xFE,0x82,0x82,0xFE,0x82,0x82,0x80,0x20,0x10,0x08,0x86,0x60,0x00,0x80,0x40,0x30,0x0F,0x00,
             -0x00,0xFF,0x00,
  32          0x00,0x80,0x84,0x42,0x21,0x10,0x0C,0x00},/*"形",3*/
  33          
  34          {0x00,0xFE,0x22,0x22,0xFE,0x00,0x40,0x48,0xC8,0x09,0xFA,0xE4,0x40,0x20,0x10,0x00,0x80,0x7F,0x02,0x82,0xFF,
             -0x20,0x10,0x0C,
  35          0x43,0x80,0x7F,0x00,0x07,0x18,0x20,0x00},/*"脉",0*/
  36          {0x00,0x02,0x0C,0xC0,0x00,0xF0,0x10,0x10,0x10,0xFF,0x10,0x10,0x10,0xF0,0x00,0x00,0x02,0x02,0x7F,0x00,0x00,
             -0x0F,0x04,0x04,
  37          0x04,0xFF,0x04,0x04,0x04,0x0F,0x00,0x00},/*"冲",1*/
  38          {0x08,0x08,0x08,0x08,0x08,0xF8,0x89,0x8E,0x88,0x88,0x88,0x88,0x08,0x08,0x08,0x00,0x00,0x80,0x40,0x20,0x18,
             -0x07,0x00,0x00,
  39          0x40,0x80,0x40,0x3F,0x00,0x00,0x00,0x00},/*"方",2*/
  40          {0x10,0x60,0x02,0x0C,0xC0,0x00,0xF8,0x88,0x88,0x88,0xFF,0x88,0x88,0xA8,0x18,0x00,0x04,0x04,0x7C,0x03,0x80,
             -0x60,0x1F,0x80,
  41          0x43,0x2C,0x10,0x28,0x46,0x81,0x80,0x00},/*"波",3*/
  42          
C51 COMPILER V9.52.0.0   MENU                                                              10/23/2020 17:08:44 PAGE 2   

  43          {0x00,0x02,0x02,0xC2,0x02,0x02,0x02,0xFE,0x82,0x82,0x82,0x82,0x82,0x02,0x00,0x00,0x40,0x40,0x40,0x7F,0x40,
             -0x40,0x40,0x7F,
  44          0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x00},/*"正",0*/
  45          {0x02,0xE2,0x22,0x22,0x3E,0x00,0x08,0x88,0x48,0x39,0x0E,0x08,0xC8,0x08,0x08,0x00,0x00,0x43,0x82,0x42,0x3E,
             -0x00,0x21,0x71,
  46          0x29,0x25,0x23,0x21,0x28,0x70,0x00,0x00},/*"弦",1*/
  47          {0x00,0xFE,0x22,0x22,0xFE,0x00,0x40,0x48,0xC8,0x09,0xFA,0xE4,0x40,0x20,0x10,0x00,0x80,0x7F,0x02,0x82,0xFF,
             -0x20,0x10,0x0C,
  48          0x43,0x80,0x7F,0x00,0x07,0x18,0x20,0x00},/*"脉",2*/
  49          {0x00,0x02,0x0C,0xC0,0x00,0xF0,0x10,0x10,0x10,0xFF,0x10,0x10,0x10,0xF0,0x00,0x00,0x02,0x02,0x7F,0x00,0x00,
             -0x0F,0x04,0x04,
  50          0x04,0xFF,0x04,0x04,0x04,0x0F,0x00,0x00},/*"冲",3*/
  51          {0x08,0x08,0x08,0x08,0x08,0xF8,0x89,0x8E,0x88,0x88,0x88,0x88,0x08,0x08,0x08,0x00,0x00,0x80,0x40,0x20,0x18,
             -0x07,0x00,0x00,
  52          0x40,0x80,0x40,0x3F,0x00,0x00,0x00,0x00},/*"方",4*/
  53          {0x10,0x60,0x02,0x0C,0xC0,0x00,0xF8,0x88,0x88,0x88,0xFF,0x88,0x88,0xA8,0x18,0x00,0x04,0x04,0x7C,0x03,0x80,
             -0x60,0x1F,0x80,
  54          0x43,0x2C,0x10,0x28,0x46,0x81,0x80,0x00}/*"波",5*/
  55          };
  56          
  57          //手动构建菜单
  58          MenuIndex code menu_gather[5]=
  59          {
  60              {0,0,0,1,0,(*menu0)},
  61              {1,4,2,1,0,(*menu1)},
  62              {2,1,3,2,0,(*menu2)},
  63              {3,2,4,3,0,(*menu3)},
  64              {4,3,1,4,0,(*menu4)}
  65          };
  66          
  67          void menu0()
  68          {
  69   1          show_sentence(1,str_menu[0],4,0);
  70   1          show_sentence(2,str_menu[4],4,0);
  71   1          show_sentence(3,str_menu[8],4,0);
  72   1          show_sentence(4,str_menu[12],6,0);
  73   1      }
  74          
  75          void menu1()
  76          {
  77   1          show_sentence(1,str_menu[0],4,1);
  78   1          show_sentence(2,str_menu[4],4,0);
  79   1          show_sentence(3,str_menu[8],4,0);
  80   1          show_sentence(4,str_menu[12],6,0);
  81   1      }
  82          
  83          void menu2()
  84          {
  85   1          show_sentence(1,str_menu[0],4,0);
  86   1          show_sentence(2,str_menu[4],4,1);
  87   1          show_sentence(3,str_menu[8],4,0);
  88   1          show_sentence(4,str_menu[12],6,0);
  89   1      }
  90          
  91          void menu3()
  92          {
  93   1          show_sentence(1,str_menu[0],4,0);
  94   1          show_sentence(2,str_menu[4],4,0);
  95   1          show_sentence(3,str_menu[8],4,1);
  96   1          show_sentence(4,str_menu[12],6,0);
  97   1      }
  98          
C51 COMPILER V9.52.0.0   MENU                                                              10/23/2020 17:08:44 PAGE 3   

  99          void menu4()
 100          {
 101   1          show_sentence(1,str_menu[0],4,0);
 102   1          show_sentence(2,str_menu[4],4,0);
 103   1          show_sentence(3,str_menu[8],4,0);
 104   1          show_sentence(4,str_menu[12],6,1);
 105   1      }
 106          
 107          //注释部分为待拓展结构，慎删除
 108          //C51构建树形结构不好处理内存分配问题
 109          // /**
 110          //  * @description: 创建新的同级下一节点
 111          //  * 
 112          //  * @param: head 此级菜单的头节点
 113          //  * @param: function 新节点功能
 114          //  * @param: name 新节点名称
 115          //  * @return: menu_t* 返回创建的节点
 116          //  */
 117          // menu_t *add_same_node(menu_t *head ,void *function,u8 function_id , u8 *name )
 118          // {
 119          //     menu_t *p=NULL,*pr=head;
 120          //     p=(menu_t *)malloc(sizeof(menu_t));//创建空节点
 121          
 122          //     if(head==NULL)  //头节点为空，则创建头节点
 123          //     {
 124          //         head=p;
 125          //         p->id=0;         
 126          //     }
 127          //     else    //头节点不为空
 128          //     {
 129          //         u8 i=0;
 130          //         while (pr->same_down!=NULL) //寻找并转到同级菜单的最后节点
 131          //         {
 132          //             i++;
 133          //             pr=pr->same_down;
 134          //         }
 135          //         pr->same_down=p;//创建同级节点
 136          //         p->same_up=pr;
 137          //         p->father=head->father;//和头节点拥有同样的父节点
 138          //         p->id=i;
 139          //     }
 140          //     p->function=function;//补充新节点的信息
 141          //     p->function_id=function_id;
 142          //     p->menu_name=name;
 143          //     p->son=NULL;
 144          //     p->same_down=NULL;
 145          //     return p;//返回新建的节点
 146          // }
 147          
 148          // /**
 149          //  * @description: 创建子节点
 150          //  * 
 151          //  * @param: head 当前列表头节点
 152          //  * @param: num 列表要创建子节点的节点编号
 153          //  * @param: function 节点函数功能
 154          //  * @param: name 节点名称
 155          //  * @return: menu_t* 返回该位置的子节点或者新节点
 156          //  */
 157          // menu_t *add_son_node(menu_t *head, u8 num, void *function,u8 function_id ,u8 *name )
 158          // {
 159          //     u8 i;
 160          //     menu_t *pr=head;
C51 COMPILER V9.52.0.0   MENU                                                              10/23/2020 17:08:44 PAGE 4   

 161              
 162          //     for(i=0;i<num;i++)//遍历寻址
 163          //     {
 164          //         if(pr->same_down!=NULL)
 165          //         {
 166          //             pr=pr->same_down;
 167          //         }
 168          //     }
 169          
 170          //     if(pr->son!=NULL)//是否存在子节点
 171          //     {
 172          //         pr=pr->son;
 173          //     }
 174          //     else
 175          //     {
 176          //         menu_t *p=NULL;
 177          //         p=(menu_t *)malloc(sizeof(menu_t)); //创建空节点
 178          
 179          //         pr->son=p;
 180          //         p->father=pr;
 181          //         p->id=0;
 182          //         p->same_up=NULL;
 183          //         p->same_down=NULL;
 184          //         p->son=NULL;
 185          //         p->function=function;
 186          //         p->function_id=function_id;
 187          //         p->menu_name=name;
 188          //         return p;//返回新创建的子节点
 189          //     }
 190          //     return pr;//返回已存在的子节点
 191          // }
 192          
 193          // /**
 194          //  * @description: 菜单结构建立
 195          //  * 
 196          //  * @param: head 头节点 往下创建选项
 197          //  */
 198          // void menu_make(menu_t *head)
 199          // {
 200          //     menu_t *first_page=NULL;
 201          //     init_mempool(first_page,5*sizeof(menu_t));
 202          //     first_page=(menu_t *)malloc(sizeof(menu_t));
 203          
 204          //     head=add_same_node(head,menu0,0,"页0");
 205          //     add_son_node(head,0,menu1,1,"页1选项1");
 206          //     add_same_node(first_page,menu2,2,"页1选项2");
 207          //     add_same_node(first_page,menu3,3,"页1选项3");
 208          //     add_same_node(first_page,menu4,4,"页1选项4");
 209          // }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    340    ----
   CONSTANT SIZE    =    616    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

C51 COMPILER V9.52.0.0   MENU                                                              10/23/2020 19:35:27 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE MENU
OBJECT MODULE PLACED IN .\Objects\menu.obj
COMPILER INVOKED BY: H:\electric\Keil_v5\C51\BIN\C51.EXE menu.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\List
                    -ings\menu.lst) TABS(2) OBJECT(.\Objects\menu.obj)

line level    source

   1          /**
   2           * @file: menu.c
   3           * @author: Honokawings (1915569481@qq.com)
   4           * @description: 菜单结构建立
   5           * @version 0.1
   6           * @date: 2020-10-22 16:10:99
   7           * 
   8           * @copyright Copyright (c) 2020
   9           * 
  10           */
  11          #include "menu.h"
  12          
  13          //从上至下 逆序字符
  14          static u8 code str_menu[][32]=
  15          {
  16          {0x00,0x02,0x02,0xC2,0x02,0x02,0x02,0xFE,0x82,0x82,0x82,0x82,0x82,0x02,0x00,0x00,0x40,0x40,0x40,0x7F,0x40,
             -0x40,0x40,0x7F,
  17           0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x00},/*"正",0*/
  18          {0x02,0xE2,0x22,0x22,0x3E,0x00,0x08,0x88,0x48,0x39,0x0E,0x08,0xC8,0x08,0x08,0x00,0x00,0x43,0x82,0x42,0x3E,
             -0x00,0x21,0x71,
  19           0x29,0x25,0x23,0x21,0x28,0x70,0x00,0x00},/*"弦",1*/
  20          {0x10,0x60,0x02,0x0C,0xC0,0x00,0xF8,0x88,0x88,0x88,0xFF,0x88,0x88,0xA8,0x18,0x00,0x04,0x04,0x7C,0x03,0x80,
             -0x60,0x1F,0x80,
  21           0x43,0x2C,0x10,0x28,0x46,0x81,0x80,0x00},/*"波",2*/
  22          {0x80,0x82,0x82,0xFE,0x82,0x82,0xFE,0x82,0x82,0x80,0x20,0x10,0x08,0x86,0x60,0x00,0x80,0x40,0x30,0x0F,0x00,
             -0x00,0xFF,0x00,
  23           0x00,0x80,0x84,0x42,0x21,0x10,0x0C,0x00},/*"形",3*/
  24          
  25          
  26          {0x00,0x04,0x84,0x84,0x84,0x84,0x84,0x84,0x84,0x84,0x84,0x84,0x84,0x04,0x00,0x00,0x20,0x20,0x20,0x20,0x20,
             -0x20,0x20,0x20,
  27          0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x00},/*"三",0*/
  28          {0x20,0x10,0xE8,0x24,0x27,0x24,0x24,0xE4,0x24,0x34,0x2C,0x20,0xE0,0x00,0x00,0x00,0x80,0x60,0x1F,0x09,0x09,
             -0x09,0x09,0x7F,
  29          0x09,0x09,0x49,0x89,0x7F,0x00,0x00,0x00},/*"角",1*/
  30          {0x10,0x60,0x02,0x0C,0xC0,0x00,0xF8,0x88,0x88,0x88,0xFF,0x88,0x88,0xA8,0x18,0x00,0x04,0x04,0x7C,0x03,0x80,
             -0x60,0x1F,0x80,
  31          0x43,0x2C,0x10,0x28,0x46,0x81,0x80,0x00},/*"波",2*/
  32          {0x80,0x82,0x82,0xFE,0x82,0x82,0xFE,0x82,0x82,0x80,0x20,0x10,0x08,0x86,0x60,0x00,0x80,0x40,0x30,0x0F,0x00,
             -0x00,0xFF,0x00,
  33          0x00,0x80,0x84,0x42,0x21,0x10,0x0C,0x00},/*"形",3*/
  34          
  35          {0x00,0xFE,0x22,0x22,0xFE,0x00,0x40,0x48,0xC8,0x09,0xFA,0xE4,0x40,0x20,0x10,0x00,0x80,0x7F,0x02,0x82,0xFF,
             -0x20,0x10,0x0C,
  36          0x43,0x80,0x7F,0x00,0x07,0x18,0x20,0x00},/*"脉",0*/
  37          {0x00,0x02,0x0C,0xC0,0x00,0xF0,0x10,0x10,0x10,0xFF,0x10,0x10,0x10,0xF0,0x00,0x00,0x02,0x02,0x7F,0x00,0x00,
             -0x0F,0x04,0x04,
  38          0x04,0xFF,0x04,0x04,0x04,0x0F,0x00,0x00},/*"冲",1*/
  39          {0x08,0x08,0x08,0x08,0x08,0xF8,0x89,0x8E,0x88,0x88,0x88,0x88,0x08,0x08,0x08,0x00,0x00,0x80,0x40,0x20,0x18,
             -0x07,0x00,0x00,
  40          0x40,0x80,0x40,0x3F,0x00,0x00,0x00,0x00},/*"方",2*/
  41          {0x10,0x60,0x02,0x0C,0xC0,0x00,0xF8,0x88,0x88,0x88,0xFF,0x88,0x88,0xA8,0x18,0x00,0x04,0x04,0x7C,0x03,0x80,
             -0x60,0x1F,0x80,
  42          0x43,0x2C,0x10,0x28,0x46,0x81,0x80,0x00},/*"波",3*/
C51 COMPILER V9.52.0.0   MENU                                                              10/23/2020 19:35:27 PAGE 2   

  43          
  44          {0x00,0x02,0x02,0xC2,0x02,0x02,0x02,0xFE,0x82,0x82,0x82,0x82,0x82,0x02,0x00,0x00,0x40,0x40,0x40,0x7F,0x40,
             -0x40,0x40,0x7F,
  45          0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x00},/*"正",0*/
  46          {0x02,0xE2,0x22,0x22,0x3E,0x00,0x08,0x88,0x48,0x39,0x0E,0x08,0xC8,0x08,0x08,0x00,0x00,0x43,0x82,0x42,0x3E,
             -0x00,0x21,0x71,
  47          0x29,0x25,0x23,0x21,0x28,0x70,0x00,0x00},/*"弦",1*/
  48          {0x00,0xFE,0x22,0x22,0xFE,0x00,0x40,0x48,0xC8,0x09,0xFA,0xE4,0x40,0x20,0x10,0x00,0x80,0x7F,0x02,0x82,0xFF,
             -0x20,0x10,0x0C,
  49          0x43,0x80,0x7F,0x00,0x07,0x18,0x20,0x00},/*"脉",2*/
  50          {0x00,0x02,0x0C,0xC0,0x00,0xF0,0x10,0x10,0x10,0xFF,0x10,0x10,0x10,0xF0,0x00,0x00,0x02,0x02,0x7F,0x00,0x00,
             -0x0F,0x04,0x04,
  51          0x04,0xFF,0x04,0x04,0x04,0x0F,0x00,0x00},/*"冲",3*/
  52          {0x08,0x08,0x08,0x08,0x08,0xF8,0x89,0x8E,0x88,0x88,0x88,0x88,0x08,0x08,0x08,0x00,0x00,0x80,0x40,0x20,0x18,
             -0x07,0x00,0x00,
  53          0x40,0x80,0x40,0x3F,0x00,0x00,0x00,0x00},/*"方",4*/
  54          {0x10,0x60,0x02,0x0C,0xC0,0x00,0xF8,0x88,0x88,0x88,0xFF,0x88,0x88,0xA8,0x18,0x00,0x04,0x04,0x7C,0x03,0x80,
             -0x60,0x1F,0x80,
  55          0x43,0x2C,0x10,0x28,0x46,0x81,0x80,0x00}/*"波",5*/
  56          };
  57          
  58          //手动构建菜单
  59          MenuIndex code menu_gather[5]=
  60          {
  61              {0,0,0,1,0,(*menu0)},
  62              {1,4,2,1,0,(*menu1)},
  63              {2,1,3,2,0,(*menu2)},
  64              {3,2,4,3,0,(*menu3)},
  65              {4,3,1,4,0,(*menu4)}
  66          };
  67          
  68          void menu0()
  69          {
  70   1          show_sentence(1,str_menu[0],4,0);
  71   1          show_sentence(2,str_menu[4],4,0);
  72   1          show_sentence(3,str_menu[8],4,0);
  73   1          show_sentence(4,str_menu[12],6,0);
  74   1      }
  75          
  76          void menu1()
  77          {
  78   1          show_sentence(1,str_menu[0],4,1);
  79   1          show_sentence(2,str_menu[4],4,0);
  80   1          show_sentence(3,str_menu[8],4,0);
  81   1          show_sentence(4,str_menu[12],6,0);
  82   1      }
  83          
  84          void menu2()
  85          {
  86   1          show_sentence(1,str_menu[0],4,0);
  87   1          show_sentence(2,str_menu[4],4,1);
  88   1          show_sentence(3,str_menu[8],4,0);
  89   1          show_sentence(4,str_menu[12],6,0);
  90   1      }
  91          
  92          void menu3()
  93          {
  94   1          show_sentence(1,str_menu[0],4,0);
  95   1          show_sentence(2,str_menu[4],4,0);
  96   1          show_sentence(3,str_menu[8],4,1);
  97   1          show_sentence(4,str_menu[12],6,0);
  98   1      }
C51 COMPILER V9.52.0.0   MENU                                                              10/23/2020 19:35:27 PAGE 3   

  99          
 100          void menu4()
 101          {
 102   1          show_sentence(1,str_menu[0],4,0);
 103   1          show_sentence(2,str_menu[4],4,0);
 104   1          show_sentence(3,str_menu[8],4,0);
 105   1          show_sentence(4,str_menu[12],6,1);
 106   1      }
 107          
 108          //注释部分为待拓展结构，慎删除
 109          //C51构建树形结构不好处理内存分配问题
 110          // /**
 111          //  * @description: 创建新的同级下一节点
 112          //  * 
 113          //  * @param: head 此级菜单的头节点
 114          //  * @param: function 新节点功能
 115          //  * @param: name 新节点名称
 116          //  * @return: menu_t* 返回创建的节点
 117          //  */
 118          // menu_t *add_same_node(menu_t *head ,void *function,u8 function_id , u8 *name )
 119          // {
 120          //     menu_t *p=NULL,*pr=head;
 121          //     p=(menu_t *)malloc(sizeof(menu_t));//创建空节点
 122          
 123          //     if(head==NULL)  //头节点为空，则创建头节点
 124          //     {
 125          //         head=p;
 126          //         p->id=0;         
 127          //     }
 128          //     else    //头节点不为空
 129          //     {
 130          //         u8 i=0;
 131          //         while (pr->same_down!=NULL) //寻找并转到同级菜单的最后节点
 132          //         {
 133          //             i++;
 134          //             pr=pr->same_down;
 135          //         }
 136          //         pr->same_down=p;//创建同级节点
 137          //         p->same_up=pr;
 138          //         p->father=head->father;//和头节点拥有同样的父节点
 139          //         p->id=i;
 140          //     }
 141          //     p->function=function;//补充新节点的信息
 142          //     p->function_id=function_id;
 143          //     p->menu_name=name;
 144          //     p->son=NULL;
 145          //     p->same_down=NULL;
 146          //     return p;//返回新建的节点
 147          // }
 148          
 149          // /**
 150          //  * @description: 创建子节点
 151          //  * 
 152          //  * @param: head 当前列表头节点
 153          //  * @param: num 列表要创建子节点的节点编号
 154          //  * @param: function 节点函数功能
 155          //  * @param: name 节点名称
 156          //  * @return: menu_t* 返回该位置的子节点或者新节点
 157          //  */
 158          // menu_t *add_son_node(menu_t *head, u8 num, void *function,u8 function_id ,u8 *name )
 159          // {
 160          //     u8 i;
C51 COMPILER V9.52.0.0   MENU                                                              10/23/2020 19:35:27 PAGE 4   

 161          //     menu_t *pr=head;
 162              
 163          //     for(i=0;i<num;i++)//遍历寻址
 164          //     {
 165          //         if(pr->same_down!=NULL)
 166          //         {
 167          //             pr=pr->same_down;
 168          //         }
 169          //     }
 170          
 171          //     if(pr->son!=NULL)//是否存在子节点
 172          //     {
 173          //         pr=pr->son;
 174          //     }
 175          //     else
 176          //     {
 177          //         menu_t *p=NULL;
 178          //         p=(menu_t *)malloc(sizeof(menu_t)); //创建空节点
 179          
 180          //         pr->son=p;
 181          //         p->father=pr;
 182          //         p->id=0;
 183          //         p->same_up=NULL;
 184          //         p->same_down=NULL;
 185          //         p->son=NULL;
 186          //         p->function=function;
 187          //         p->function_id=function_id;
 188          //         p->menu_name=name;
 189          //         return p;//返回新创建的子节点
 190          //     }
 191          //     return pr;//返回已存在的子节点
 192          // }
 193          
 194          // /**
 195          //  * @description: 菜单结构建立
 196          //  * 
 197          //  * @param: head 头节点 往下创建选项
 198          //  */
 199          // void menu_make(menu_t *head)
 200          // {
 201          //     menu_t *first_page=NULL;
 202          //     init_mempool(first_page,5*sizeof(menu_t));
 203          //     first_page=(menu_t *)malloc(sizeof(menu_t));
 204          
 205          //     head=add_same_node(head,menu0,0,"页0");
 206          //     add_son_node(head,0,menu1,1,"页1选项1");
 207          //     add_same_node(first_page,menu2,2,"页1选项2");
 208          //     add_same_node(first_page,menu3,3,"页1选项3");
 209          //     add_same_node(first_page,menu4,4,"页1选项4");
 210          // }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    340    ----
   CONSTANT SIZE    =    616    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
